name: MediaFire Downloader

on:
  push:
    branches:
      - main # Atau branch lain yang Anda inginkan untuk memicu workflow

jobs:
  download_and_release:
    runs-on: ubuntu-latest
    permissions: # <-- Add this block
      contents: write

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.x'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install selenium webdriver-manager

    - name: Set MediaFire Page URL as environment variable
      run: |
        # Ganti 'YOUR_MEDIAFIRE_PAGE_URL_HERE' dengan URL halaman MediaFire yang sebenarnya
        # Ini adalah URL yang mengarah ke halaman file, BUKAN tautan unduhan langsung.
        # Contoh: https://www.mediafire.com/file/xyz123/namafile.zip/file
        echo "MEDIAFIRE_PAGE_URL=https://www.mediafire.com/file_premium/dwa3274aece6bax/GH-Saves_Part4_v0.54and-up.zip/file" >> $GITHUB_ENV

    - name: Run MediaFire Downloader Script
      run: python download_mediafire.py
      # Skrip Python akan membaca MEDIAFIRE_PAGE_URL dari environment variable
      # dan menyimpan URL unduhan ke 'download_link.txt'.

    - name: Get Download URL and Download File
      id: download_file
      run: |
        # Baca URL dari file yang dibuat oleh skrip Python
        DOWNLOAD_URL=$(cat download_link.txt)
        # Ambil nama file dari URL
        FILE_NAME=$(basename "$DOWNLOAD_URL")
        # Unduh file menggunakan wget
        wget -O "$FILE_NAME" "$DOWNLOAD_URL"
        # Simpan nama file ke output untuk langkah selanjutnya
        echo "file_name=$FILE_NAME" >> $GITHUB_OUTPUT
      shell: bash

    - name: Create GitHub Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: release-${{ github.run_number }}
        name: Automatic MediaFire Download ${{ github.run_number }}
        body: |
          Rilis otomatis dari MediaFire.
          File: ${{ steps.download_file.outputs.file_name }}
        files: ${{ steps.download_file.outputs.file_name }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
